name: Pedidos CI

#rr55
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build and Test
        id: test
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet test --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./TestResults/ /p:Exclude="[xunit.*]*"

      - name: Check Code Coverage
        run: |
          coverage=$(awk -F 'sequenceCoverage="' 'NR>2 {split($2, a, "\""); print a[1]; exit}' ./test/LanchoneteDaRua.Ms.Pedidos.Tests/TestResults/coverage.opencover.xml)
          if (( $(echo "$coverage >= 80" | bc -l) )); then
            echo "Code coverage is greater than or equal to 80%."
          else
            echo "Code coverage is less than 80%."
            exit 1
          fi

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    # checkout the repo
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/ms-lanchonetedarua-pedidos:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/ms-lanchonetedarua-pedidos:${{ github.sha }}